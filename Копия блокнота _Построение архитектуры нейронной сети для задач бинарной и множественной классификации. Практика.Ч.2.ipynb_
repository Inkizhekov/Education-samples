{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1TyxIOUnUYTbjoQhuq5VFJpLIDAAr9ve5","timestamp":1663579757425}],"authorship_tag":"ABX9TyNrnvKSCOMVT1lQ4CKwZAew"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["###Import"],"metadata":{"id":"QqO5d_pjOqwh"}},{"cell_type":"code","execution_count":2,"metadata":{"id":"Peg2_33eGlMb","executionInfo":{"status":"ok","timestamp":1692324114974,"user_tz":-420,"elapsed":6935,"user":{"displayName":"Анатолий Инкижеков","userId":"04854426355593330927"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import scipy\n","from sklearn.model_selection import StratifiedGroupKFold\n","\n","#sklearn\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.metrics import accuracy_score\n","\n","#Глубокое обучение\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense, Dropout\n","from tensorflow.keras.datasets import mnist\n","from tensorflow.keras import utils\n","from tensorflow.keras.preprocessing import image\n","#from tensorflow.python.keras.optimizers import Adam, RMSprop\n","\n","from PIL import Image\n","\n","import matplotlib.pyplot as plt\n","\n","%matplotlib inline"]},{"cell_type":"markdown","source":["## Подготовка данных для работы сети (обучения)"],"metadata":{"id":"sYzzxGSqTtYu"}},{"cell_type":"code","source":["#Загружаем даннные из датасета мнист\n","\n","(x_train_org, y_train_org), (x_test_org, y_test_org) = mnist.load_data()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U6XwYfavTR8e","executionInfo":{"status":"ok","timestamp":1692324119800,"user_tz":-420,"elapsed":696,"user":{"displayName":"Анатолий Инкижеков","userId":"04854426355593330927"}},"outputId":"0f19e37a-30e0-455b-e58c-80c54dd51b0a"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11490434/11490434 [==============================] - 0s 0us/step\n"]}]},{"cell_type":"code","source":["#Смотрим случайное изображение\n","\n","plt.imshow(Image.fromarray(x_train_org[888]).convert('RGBA'))\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"B-Z3Gr3WUQiF","executionInfo":{"status":"ok","timestamp":1692324128389,"user_tz":-420,"elapsed":680,"user":{"displayName":"Анатолий Инкижеков","userId":"04854426355593330927"}},"outputId":"af4f3231-4bdc-428c-f366-9f982316c3e4"},"execution_count":4,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["##Преобразование данных"],"metadata":{"id":"a-5I687MVIDT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_train = x_train_org.reshape(60000, 784)\n","x_test = x_test_org.reshape(10000, 784)"],"metadata":{"id":"P6bOWmhqVQaL","executionInfo":{"status":"ok","timestamp":1692324135644,"user_tz":-420,"elapsed":252,"user":{"displayName":"Анатолий Инкижеков","userId":"04854426355593330927"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["# нормализация данных\n","x_train = x_train.astype('float32')\n","x_train = x_train /255\n","\n","x_test = x_test.astype('float32')\n","x_test = x_test /255"],"metadata":{"id":"TTvBON3UZRJj","executionInfo":{"status":"ok","timestamp":1692324139241,"user_tz":-420,"elapsed":270,"user":{"displayName":"Анатолий Инкижеков","userId":"04854426355593330927"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["#OHE (one head encoding)\n","y_train = utils.to_categorical(y_train_org, 10)\n","y_test = utils.to_categorical(y_test_org, 10)"],"metadata":{"id":"_Jsu-8SgmVDX","executionInfo":{"status":"ok","timestamp":1692324143302,"user_tz":-420,"elapsed":255,"user":{"displayName":"Анатолий Инкижеков","userId":"04854426355593330927"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["print(y_test[888])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p_v5tjkDoqA8","executionInfo":{"status":"ok","timestamp":1665379237674,"user_tz":-420,"elapsed":338,"user":{"displayName":"Анатолий Инкижеков","userId":"04854426355593330927"}},"outputId":"58741242-5097-452e-92f1-52fbd0f3b5ff"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]\n"]}]},{"cell_type":"markdown","source":["###Создаем нейронную сеть для множественной классификации"],"metadata":{"id":"z0oV9cGLov9b"}},{"cell_type":"code","source":["from sklearn import metrics\n","# модель НС\n","model = Sequential()\n","\n","# Входной полносвязный слой\n","model.add(Dense(400, input_dim = 784, activation= 'relu'))\n","model.add(Dropout(0.2))\n","model.add(Dense(200, activation= 'relu'))\n","model.add(Dropout(0.2))\n","model.add(Dense(10, activation= 'Softmax'))\n","\n","model.compile(loss = 'categorical_crossentropy', optimizer = 'adam', metrics = ['accuracy'])\n","\n","n = 30000\n","\n","history = model.fit(x_train[:n],\n","                    y_train[:n],\n","                    batch_size = 250,\n","                    epochs = 30,\n","                    validation_data = (x_train[n:], y_train[n:]),\n","                    verbose = 1)\n","\n","plt.plot(history.history['accuracy'],\n","         label = 'Точность train')\n","plt.plot(history.history['val_accuracy'],\n","         label = 'Точность test')\n","plt.xlabel('Эпоха')\n","plt.ylabel('Точность обучения')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"lwzsOVwIpMXK","executionInfo":{"status":"ok","timestamp":1692324488376,"user_tz":-420,"elapsed":42455,"user":{"displayName":"Анатолий Инкижеков","userId":"04854426355593330927"}},"outputId":"a14a081a-ee71-4ee8-bdbf-6b9909bc13df"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/30\n","120/120 [==============================] - 2s 9ms/step - loss: 0.4798 - accuracy: 0.8592 - val_loss: 0.2105 - val_accuracy: 0.9373\n","Epoch 2/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.1841 - accuracy: 0.9466 - val_loss: 0.1465 - val_accuracy: 0.9557\n","Epoch 3/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.1289 - accuracy: 0.9620 - val_loss: 0.1269 - val_accuracy: 0.9621\n","Epoch 4/30\n","120/120 [==============================] - 1s 9ms/step - loss: 0.0975 - accuracy: 0.9706 - val_loss: 0.1093 - val_accuracy: 0.9668\n","Epoch 5/30\n","120/120 [==============================] - 1s 8ms/step - loss: 0.0784 - accuracy: 0.9755 - val_loss: 0.0992 - val_accuracy: 0.9694\n","Epoch 6/30\n","120/120 [==============================] - 1s 7ms/step - loss: 0.0603 - accuracy: 0.9811 - val_loss: 0.0991 - val_accuracy: 0.9705\n","Epoch 7/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.0497 - accuracy: 0.9842 - val_loss: 0.0955 - val_accuracy: 0.9726\n","Epoch 8/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.0429 - accuracy: 0.9868 - val_loss: 0.0962 - val_accuracy: 0.9724\n","Epoch 9/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.0379 - accuracy: 0.9885 - val_loss: 0.0954 - val_accuracy: 0.9730\n","Epoch 10/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0299 - accuracy: 0.9908 - val_loss: 0.0985 - val_accuracy: 0.9728\n","Epoch 11/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0275 - accuracy: 0.9914 - val_loss: 0.0951 - val_accuracy: 0.9748\n","Epoch 12/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.0228 - accuracy: 0.9927 - val_loss: 0.0956 - val_accuracy: 0.9745\n","Epoch 13/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0184 - accuracy: 0.9943 - val_loss: 0.0956 - val_accuracy: 0.9750\n","Epoch 14/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.0185 - accuracy: 0.9937 - val_loss: 0.1085 - val_accuracy: 0.9733\n","Epoch 15/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.0165 - accuracy: 0.9947 - val_loss: 0.1085 - val_accuracy: 0.9729\n","Epoch 16/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.0138 - accuracy: 0.9959 - val_loss: 0.0993 - val_accuracy: 0.9750\n","Epoch 17/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.0126 - accuracy: 0.9961 - val_loss: 0.1052 - val_accuracy: 0.9750\n","Epoch 18/30\n","120/120 [==============================] - 1s 9ms/step - loss: 0.0135 - accuracy: 0.9957 - val_loss: 0.1055 - val_accuracy: 0.9754\n","Epoch 19/30\n","120/120 [==============================] - 1s 10ms/step - loss: 0.0120 - accuracy: 0.9962 - val_loss: 0.1034 - val_accuracy: 0.9758\n","Epoch 20/30\n","120/120 [==============================] - 1s 9ms/step - loss: 0.0144 - accuracy: 0.9947 - val_loss: 0.1162 - val_accuracy: 0.9728\n","Epoch 21/30\n","120/120 [==============================] - 1s 11ms/step - loss: 0.0142 - accuracy: 0.9950 - val_loss: 0.1061 - val_accuracy: 0.9750\n","Epoch 22/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.0136 - accuracy: 0.9957 - val_loss: 0.1192 - val_accuracy: 0.9734\n","Epoch 23/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0124 - accuracy: 0.9958 - val_loss: 0.1206 - val_accuracy: 0.9735\n","Epoch 24/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.0111 - accuracy: 0.9964 - val_loss: 0.1212 - val_accuracy: 0.9740\n","Epoch 25/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0090 - accuracy: 0.9968 - val_loss: 0.1199 - val_accuracy: 0.9756\n","Epoch 26/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.0095 - accuracy: 0.9969 - val_loss: 0.1176 - val_accuracy: 0.9751\n","Epoch 27/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.0101 - accuracy: 0.9966 - val_loss: 0.1295 - val_accuracy: 0.9726\n","Epoch 28/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.0096 - accuracy: 0.9972 - val_loss: 0.1149 - val_accuracy: 0.9755\n","Epoch 29/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.0078 - accuracy: 0.9974 - val_loss: 0.1259 - val_accuracy: 0.9748\n","Epoch 30/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.0115 - accuracy: 0.9961 - val_loss: 0.1255 - val_accuracy: 0.9750\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"U63VRVHYCj6A"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Сверточная нейронная сеть"],"metadata":{"id":"x1zIzb0x7XyG"}},{"cell_type":"markdown","source":["###import"],"metadata":{"id":"da7Ubpb6BDmR"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import scipy\n","from sklearn.model_selection import StratifiedGroupKFold\n","\n","#sklearn\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.metrics import accuracy_score\n","\n","#Глубокое обучение\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense, Dropout, Conv2D, MaxPooling2D, Flatten, BatchNormalization, GlobalAveragePooling2D\n","from tensorflow.keras.datasets import mnist\n","from tensorflow.keras import utils\n","from tensorflow.keras.preprocessing import image\n","#from tensorflow.python.keras.optimizers import Adam, RMSprop\n","\n","from PIL import Image\n","\n","import matplotlib.pyplot as plt\n","\n","%matplotlib inline"],"metadata":{"id":"nigGVxOKA15h"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Загружаем даннные из датасета мнист\n","\n","(x_train_org, y_train_org), (x_test_org, y_test_org) = mnist.load_data()"],"metadata":{"id":"LRed4JFtAxHi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#OHE (one head encoding)\n","y_train = utils.to_categorical(y_train_org, 10)\n","y_test = utils.to_categorical(y_test_org, 10)\n","print(y_test[10])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wr347IrwEBHl","executionInfo":{"status":"ok","timestamp":1663579693230,"user_tz":-420,"elapsed":436,"user":{"displayName":"Анатолий Инкижеков","userId":"04854426355593330927"}},"outputId":"32feef8c-c9d6-488a-b92b-ee20ce8e38be"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n"]}]},{"cell_type":"markdown","source":["###Преобразуем данные\n"],"metadata":{"id":"DNhdh0qsBkWY"}},{"cell_type":"code","source":["x_train = x_train_org.reshape(x_train_org.shape[0], 28,28,1)\n","\n","x_test = x_test_org.reshape(x_test_org.shape[0], 28,28,1)"],"metadata":{"id":"H26dGNZYBzvH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn import metrics\n","# модель НС\n","model = Sequential()\n","\n","# Входной сверточный слой\n","model.add(Conv2D(32, (3, 3), padding = 'same', activation = 'relu', input_shape = (28,28,1)))\n","model.add(MaxPooling2D(pool_size= (2,2)))\n","model.add(Flatten())\n","model.add(Dense(100, input_dim = 784, activation= 'relu'))\n","model.add(Dropout(0.2))\n","model.add(Dense(10, activation= 'Softmax'))\n","\n","model.compile(loss = 'categorical_crossentropy', optimizer = 'adam', metrics = ['accuracy'])\n","\n","n = 30000\n","\n","history = model.fit(x_train[:n],\n","                    y_train[:n],\n","                    batch_size = 250,\n","                    epochs = 30,\n","                    validation_data = (x_train[n:], y_train[n:]),\n","                    verbose = 1)\n","\n","plt.plot(history.history['accuracy'],\n","         label = 'Точность train')\n","plt.plot(history.history['val_accuracy'],\n","         label = 'Точность test')\n","plt.xlabel('Эпоха')\n","plt.ylabel('Точность обучения')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":245},"id":"m4k3aeL3ClU9","executionInfo":{"status":"error","timestamp":1692324100022,"user_tz":-420,"elapsed":1317,"user":{"displayName":"Анатолий Инкижеков","userId":"04854426355593330927"}},"outputId":"5bd252e2-c987-4af5-8247-f77fc2cfdfda"},"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-f2dd84dbea30>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmetrics\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m# модель НС\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSequential\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# Входной сверточный слой\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'Sequential' is not defined"]}]}]}