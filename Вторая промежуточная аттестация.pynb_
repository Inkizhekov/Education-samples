{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1TvqyjzsVTjDqqnhMgoUxHmAWsx_j7GQp","timestamp":1665379341107},{"file_id":"1TyxIOUnUYTbjoQhuq5VFJpLIDAAr9ve5","timestamp":1663579757425}],"collapsed_sections":[],"authorship_tag":"ABX9TyN5QEnW3hvbAhi+SoTHuLDI"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["###Import"],"metadata":{"id":"QqO5d_pjOqwh"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"Peg2_33eGlMb"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import scipy\n","from sklearn.model_selection import StratifiedGroupKFold\n","\n","#sklearn\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.metrics import accuracy_score\n","\n","#Глубокое обучение\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense, Dropout\n","from tensorflow.keras.datasets import mnist\n","from tensorflow.keras import utils\n","from tensorflow.keras.preprocessing import image\n","#from tensorflow.python.keras.optimizers import Adam, RMSprop\n","\n","from PIL import Image\n","\n","import matplotlib.pyplot as plt\n","\n","%matplotlib inline"]},{"cell_type":"markdown","source":["## Подготовка данных для работы сети (обучения)"],"metadata":{"id":"sYzzxGSqTtYu"}},{"cell_type":"code","source":["#Загружаем даннные из датасета мнист\n","\n","(x_train_org, y_train_org), (x_test_org, y_test_org) = mnist.load_data()"],"metadata":{"id":"U6XwYfavTR8e","executionInfo":{"status":"ok","timestamp":1665484969740,"user_tz":-420,"elapsed":14,"user":{"displayName":"Анатолий Инкижеков","userId":"04854426355593330927"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"304d39e7-bbd6-440d-eeef-7b2cdb2f204f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11493376/11490434 [==============================] - 0s 0us/step\n","11501568/11490434 [==============================] - 0s 0us/step\n"]}]},{"cell_type":"code","source":["#Смотрим случайное изображение\n","\n","plt.imshow(Image.fromarray(x_train_org[888]).convert('RGBA'))\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"B-Z3Gr3WUQiF","executionInfo":{"status":"ok","timestamp":1665484969741,"user_tz":-420,"elapsed":10,"user":{"displayName":"Анатолий Инкижеков","userId":"04854426355593330927"}},"outputId":"860b5ca3-abd2-481c-e57d-9098b6ce0366"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["##Преобразование данных"],"metadata":{"id":"a-5I687MVIDT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_train = x_train_org.reshape(60000, 784)\n","x_test = x_test_org.reshape(10000, 784)"],"metadata":{"id":"P6bOWmhqVQaL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# нормализация данных\n","x_train = x_train.astype('float32')\n","x_train = x_train /255\n","\n","x_test = x_test.astype('float32')\n","x_test = x_test /255"],"metadata":{"id":"TTvBON3UZRJj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#OHE (one head encoding)\n","y_train = utils.to_categorical(y_train_org, 10)\n","y_test = utils.to_categorical(y_test_org, 10)"],"metadata":{"id":"_Jsu-8SgmVDX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(y_test[888])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p_v5tjkDoqA8","executionInfo":{"status":"ok","timestamp":1665484970883,"user_tz":-420,"elapsed":7,"user":{"displayName":"Анатолий Инкижеков","userId":"04854426355593330927"}},"outputId":"9527c115-3583-4740-d5e1-39e1ea29d1dc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]\n"]}]},{"cell_type":"markdown","source":["###Создаем нейронную сеть для множественной классификации"],"metadata":{"id":"z0oV9cGLov9b"}},{"cell_type":"code","source":["from sklearn import metrics\n","# модель НС\n","model = Sequential()\n","\n","# Входной полносвязный слой\n","model.add(Dense(128, input_dim = 784, activation= 'relu'))\n","\n","model.add(Dense(128, activation= 'relu'))\n","\n","model.add(Dense(10, activation= 'Softmax'))\n","\n","model.compile(loss = 'categorical_crossentropy', optimizer = 'adam', metrics = ['accuracy'])\n","\n","n = 30000\n","\n","history = model.fit(x_train[:n],\n","                    y_train[:n],\n","                    batch_size = 250,\n","                    epochs = 30,\n","                    validation_data = (x_train[n:], y_train[n:]),\n","                    verbose = 1)\n","\n","model.summary()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lwzsOVwIpMXK","executionInfo":{"status":"ok","timestamp":1665485002915,"user_tz":-420,"elapsed":32038,"user":{"displayName":"Анатолий Инкижеков","userId":"04854426355593330927"}},"outputId":"2887abe9-8575-40bb-b58e-6813ac93fc77"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/30\n","120/120 [==============================] - 6s 12ms/step - loss: 0.5689 - accuracy: 0.8443 - val_loss: 0.2705 - val_accuracy: 0.9216\n","Epoch 2/30\n","120/120 [==============================] - 1s 8ms/step - loss: 0.2252 - accuracy: 0.9358 - val_loss: 0.2043 - val_accuracy: 0.9394\n","Epoch 3/30\n","120/120 [==============================] - 1s 8ms/step - loss: 0.1642 - accuracy: 0.9529 - val_loss: 0.1707 - val_accuracy: 0.9498\n","Epoch 4/30\n","120/120 [==============================] - 1s 7ms/step - loss: 0.1269 - accuracy: 0.9636 - val_loss: 0.1481 - val_accuracy: 0.9559\n","Epoch 5/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.1001 - accuracy: 0.9703 - val_loss: 0.1406 - val_accuracy: 0.9592\n","Epoch 6/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0816 - accuracy: 0.9762 - val_loss: 0.1323 - val_accuracy: 0.9608\n","Epoch 7/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0675 - accuracy: 0.9803 - val_loss: 0.1229 - val_accuracy: 0.9636\n","Epoch 8/30\n","120/120 [==============================] - 1s 10ms/step - loss: 0.0535 - accuracy: 0.9855 - val_loss: 0.1212 - val_accuracy: 0.9634\n","Epoch 9/30\n","120/120 [==============================] - 1s 10ms/step - loss: 0.0458 - accuracy: 0.9872 - val_loss: 0.1182 - val_accuracy: 0.9651\n","Epoch 10/30\n","120/120 [==============================] - 1s 10ms/step - loss: 0.0380 - accuracy: 0.9897 - val_loss: 0.1161 - val_accuracy: 0.9669\n","Epoch 11/30\n","120/120 [==============================] - 1s 8ms/step - loss: 0.0297 - accuracy: 0.9922 - val_loss: 0.1177 - val_accuracy: 0.9671\n","Epoch 12/30\n","120/120 [==============================] - 1s 10ms/step - loss: 0.0256 - accuracy: 0.9935 - val_loss: 0.1198 - val_accuracy: 0.9678\n","Epoch 13/30\n","120/120 [==============================] - 1s 10ms/step - loss: 0.0221 - accuracy: 0.9952 - val_loss: 0.1195 - val_accuracy: 0.9677\n","Epoch 14/30\n","120/120 [==============================] - 1s 10ms/step - loss: 0.0179 - accuracy: 0.9960 - val_loss: 0.1234 - val_accuracy: 0.9677\n","Epoch 15/30\n","120/120 [==============================] - 1s 7ms/step - loss: 0.0134 - accuracy: 0.9972 - val_loss: 0.1242 - val_accuracy: 0.9672\n","Epoch 16/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0113 - accuracy: 0.9981 - val_loss: 0.1240 - val_accuracy: 0.9694\n","Epoch 17/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0086 - accuracy: 0.9987 - val_loss: 0.1234 - val_accuracy: 0.9702\n","Epoch 18/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0072 - accuracy: 0.9990 - val_loss: 0.1244 - val_accuracy: 0.9709\n","Epoch 19/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.0060 - accuracy: 0.9994 - val_loss: 0.1279 - val_accuracy: 0.9698\n","Epoch 20/30\n","120/120 [==============================] - 1s 6ms/step - loss: 0.0044 - accuracy: 0.9998 - val_loss: 0.1285 - val_accuracy: 0.9708\n","Epoch 21/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0033 - accuracy: 0.9999 - val_loss: 0.1279 - val_accuracy: 0.9712\n","Epoch 22/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0027 - accuracy: 0.9999 - val_loss: 0.1325 - val_accuracy: 0.9705\n","Epoch 23/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0025 - accuracy: 0.9999 - val_loss: 0.1329 - val_accuracy: 0.9706\n","Epoch 24/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0018 - accuracy: 1.0000 - val_loss: 0.1344 - val_accuracy: 0.9711\n","Epoch 25/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0015 - accuracy: 1.0000 - val_loss: 0.1367 - val_accuracy: 0.9711\n","Epoch 26/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0013 - accuracy: 1.0000 - val_loss: 0.1380 - val_accuracy: 0.9713\n","Epoch 27/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0011 - accuracy: 1.0000 - val_loss: 0.1392 - val_accuracy: 0.9713\n","Epoch 28/30\n","120/120 [==============================] - 1s 5ms/step - loss: 0.0010 - accuracy: 1.0000 - val_loss: 0.1412 - val_accuracy: 0.9713\n","Epoch 29/30\n","120/120 [==============================] - 1s 5ms/step - loss: 8.9487e-04 - accuracy: 1.0000 - val_loss: 0.1444 - val_accuracy: 0.9710\n","Epoch 30/30\n","120/120 [==============================] - 1s 5ms/step - loss: 7.8056e-04 - accuracy: 1.0000 - val_loss: 0.1446 - val_accuracy: 0.9715\n","Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense (Dense)               (None, 128)               100480    \n","                                                                 \n"," dense_1 (Dense)             (None, 128)               16512     \n","                                                                 \n"," dense_2 (Dense)             (None, 10)                1290      \n","                                                                 \n","=================================================================\n","Total params: 118,282\n","Trainable params: 118,282\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"U63VRVHYCj6A"},"execution_count":null,"outputs":[]}]}